{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Chart/Chart.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","Image/c.jpg","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","colour","Date","toDateString","url","featchData","country","a","changeableUrl","axios","get","console","log","featchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","CountryPicker","handleCountryChange","useState","featchedCountries","setFeatchedCountries","useEffect","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","event","target","index","key","Chart","setDailyData","fechAPI","lineChart","length","labels","toLocaleDateString","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","featchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d1da88e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1pykM\",\"card\":\"Cards_card__37j8U\",\"infected\":\"Cards_infected__1uURE\",\"recovered\":\"Cards_recovered__MUgtY\",\"deaths\":\"Cards_deaths__3-cks\"};","import React from 'react'\r\nimport {Card,CardContent,Typography,Grid} from \"@material-ui/core\"\r\nimport styles from \"./Cards.module.css\"\r\nimport CountUp from \"react-countup\"\r\nimport cx from \"classnames\"\r\n\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {  //instead of data and using data.confirmed.value destructuring it\r\n   if(!confirmed){\r\n       return 'Loading...';\r\n   }\r\n    return (\r\n        <div className={styles.container}>\r\n        <Grid container spacing={4} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n        \r\n        <Typography variant=\"h5\">\r\n        <CountUp  start={0} end={confirmed.value} duration={2} seperator=\",\"/>\r\n        </Typography>\r\n        <Typography colour=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\r\n        <Typography variant=\"body2\">Number of active cases of COVID-19 </Typography>\r\n        </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n        <Typography variant=\"h5\">\r\n        <CountUp  start={0} end={recovered.value} duration={2} seperator=\",\"/>\r\n        </Typography>\r\n        <Typography colour=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\r\n        <Typography variant=\"body2\">Number of Recovered of COVID-19 </Typography>\r\n        </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n        <Typography variant=\"h5\">\r\n        <CountUp  start={0} end={deaths.value} duration={2} seperator=\",\"/>\r\n        </Typography>\r\n        <Typography colour=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\r\n        <Typography variant=\"body2\">Number of Deaths of COVID-19 </Typography>\r\n        </CardContent>\r\n        </Grid>\r\n        </Grid>            \r\n        </div>\r\n    )\r\n}\r\nexport default Cards","import axios from \"axios\";\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const featchData=async(country)=>{\r\n\r\nlet changeableUrl=url;\r\nif(country){\r\n    changeableUrl=`${url}/countries/${country}`\r\n}\r\ntry{\r\nconst {data:{confirmed,recovered,deaths,lastUpdate}}=await axios.get(changeableUrl);//getting specific data out of api //destructuring\r\n\r\nreturn{confirmed,recovered,deaths,lastUpdate} //{} when returning more than one\r\n}\r\n\r\ncatch(error){\r\nconsole.log(error)\r\n}\r\n}\r\n \r\nexport const featchDailyData= async()=>{\r\n    try{\r\n const {data}=await axios.get(`${url}/daily `);\r\n\r\nconst modifiedData= data.map((dailyData)=>({\r\n    confirmed:dailyData.confirmed.total,\r\n    recovered:dailyData.recovered.total,\r\n    deaths:dailyData.deaths.total,\r\n    date:dailyData.reportDate\r\n}))\r\n return(modifiedData)\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\nexport const fetchCountries=async()=>{\r\ntry{\r\nconst {data:{countries}}=await axios.get(`${url}/countries`);\r\nreturn countries.map((country)=>country.name)\r\n}\r\ncatch(error){\r\n    console.log(error)\r\n\r\n}\r\n};","import React,{useState,useEffect} from 'react'\r\nimport {NativeSelect,FormControl} from \"@material-ui/core\"\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from '../../api';\r\n\r\n\r\nconst CountryPicker=({handleCountryChange})=> {\r\nconst [featchedCountries,setFeatchedCountries]=useState([]);\r\n\r\nuseEffect(()=>{\r\n    const fetchAPI=async()=>{       \r\n    setFeatchedCountries(await fetchCountries());     //setting data to state \r\n    }\r\n\r\nfetchAPI()        \r\n},[setFeatchedCountries])//with this we can select a country\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className=\"styles.formControl\">\r\n            <NativeSelect defaultValue=\"\" onChange={(event)=>handleCountryChange(event.target.value)}>\r\n            <option value=\"\">Global</option>\r\n            {featchedCountries.map((country,index)=><option key={index} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React,{useState,useEffect} from 'react'\r\nimport {featchDailyData} from \"../../api\"\r\nimport {Line,Bar} from \"react-chartjs-2\"\r\n\r\nimport styles from \"./Chart.module.css\"\r\n\r\n\r\nfunction Chart({data:{confirmed,deaths,recovered},country}) {\r\n\r\nconst[dailyData,setDailyData]=useState([]);       //setting a state\r\n\r\nuseEffect(()=>\r\n{\r\n    const fechAPI=async()=>{                         // to call async data we created a method\r\n       // const dailyData=await featchDailyData();      //in dailyData we are getting all values by this method from api\r\n       //or we can directly setDailyData\r\n       setDailyData(await featchDailyData());\r\n\r\n    }\r\nfechAPI();\r\n},[]);\r\n\r\nconst lineChart = (\r\n    dailyData.length ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },  {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  console.log(confirmed,recovered,deaths)\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n        {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React from \"react\";\r\n\r\nimport Cards from \"./components/Cards/Cards\"\r\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\"\r\nimport Chart from \"./components/Chart/Chart\"\r\nimport coronaImage from \"./Image/c.jpg\"\r\n\r\nimport styles from \"./App.module.css\"\r\nimport { featchData } from \"./api\";\r\n\r\n\r\nclass App extends React.Component{\r\n\r\nstate={\r\n    data:{},\r\n    country:\"\",\r\n}\r\n\r\nhandleCountryChange= async(country)=>{   //pass this method as a prop to CountryPicker\r\n  const featchedData=await featchData(country)\r\n  this.setState({data:featchedData,country:country})\r\n//fetch the data\r\n\r\n//set the state\r\n}\r\n\r\n\r\n  async  componentDidMount(){          //making a call to data\r\n        const featchedData=await featchData()//created a variable stored data in it\r\n     this.setState({data:featchedData})//storing that data in the state\r\n    }\r\n\r\n    render(){ \r\n      const{data,country}=this.state\r\n        return(<div className={styles.container}>\r\n          <img className={styles.image} src={coronaImage} alt=\"coronaImage\"/>\r\n        <Cards data={this.state.data}/> \r\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n        <Chart data={data} country={country}/>\r\n       \r\n            \r\n            </div>)\r\n    }\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3CZvt\",\"image\":\"App_image__1WN9c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2Upsh\"};","module.exports = __webpack_public_path__ + \"static/media/c.b3591a3b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__356dh\"};"],"sourceRoot":""}